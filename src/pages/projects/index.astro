---
import { getCollection } from "astro:content";
import { getConfigurationCollection } from "../../lib/utils";
import Section from "../../components/common/Section.astro";
import ProjectSnippet from "../../components/ProjectSnippet.astro";
import Layout from "../../layouts/Layout.astro";

const projects = (await getCollection("project")).sort(
  (a, b) => b.data.timestamp.valueOf() - a.data.timestamp.valueOf(),
);

const { data: config } = await getConfigurationCollection();
---

<Layout>
  <Fragment slot="head">
    <title>{config.projectMeta.title}</title>
    <meta
      name="description"
      content={config.projectMeta.longDescription ?? config.projectMeta.description}
    />
    <meta property="og:title" content={config.projectMeta.title} />
    <meta
      property="og:description"
      content={config.projectMeta.description}
    />
    {config.projectMeta.keywords && (
      <meta name="keywords" content={config.projectMeta.keywords.join(", ")} />
    )}
    {config.projectMeta.cardImage && (
      <meta property="og:image" content={config.projectMeta.cardImage.startsWith('/') ? `${config.site.baseUrl}${config.projectMeta.cardImage}` : config.projectMeta.cardImage} />
    )}
    <meta property="og:url" content={`${config.site.baseUrl}/projects`} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={config.projectMeta.title} />
    <meta
      name="twitter:description"
      content={config.projectMeta.description}
    />
    {config.projectMeta.cardImage && (
      <meta name="twitter:image" content={config.projectMeta.cardImage.startsWith('/') ? `${config.site.baseUrl}${config.projectMeta.cardImage}` : config.projectMeta.cardImage} />
    )}
    <meta http-equiv="content-language" content="en" />
    <meta name="language" content="English" />
    <link rel="canonical" href={`${config.site.baseUrl}/projects`} />
  </Fragment>
  <Section class="py-4 my-8">
    <div class="flex items-center gap-4 pt-8 pb-16">
      <h1 class="font-display text-3xl sm:text-4xl leading-loose">{config.texts.projectsName}</h1>
    </div>
    <ul>
      {
        projects.map((project) => (
          <li>
            <ProjectSnippet
              title={project.data.title}
              description={project.data.description}
              url={`/projects/${project.data.slug}`}
              externalUrl={project.data.externalUrl}
              liveUrl={project.data.liveDemoUrl}
              tags={project.data.tags ?? []}
            />
          </li>
        ))
      }
    </ul>
  </Section>
</Layout>
